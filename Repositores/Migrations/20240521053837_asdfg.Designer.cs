// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositores;

#nullable disable

namespace Repositores.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240521053837_asdfg")]
    partial class asdfg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entity.Model.Companys", b =>
                {
                    b.Property<int>("CompanysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanysId"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanysId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("Entity.Model.Employees", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DogumYili")
                        .HasColumnType("int");

                    b.Property<string>("Duty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TCKimlikNo")
                        .HasColumnType("bigint");

                    b.Property<int?>("projectsProjectId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("projectsProjectId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Entity.Model.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanysId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.HasIndex("CompanysId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Entity.Model.Employees", b =>
                {
                    b.HasOne("Entity.Model.Projects", "projects")
                        .WithMany("employees")
                        .HasForeignKey("projectsProjectId");

                    b.Navigation("projects");
                });

            modelBuilder.Entity("Entity.Model.Projects", b =>
                {
                    b.HasOne("Entity.Model.Companys", "Companys")
                        .WithMany("projects")
                        .HasForeignKey("CompanysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companys");
                });

            modelBuilder.Entity("Entity.Model.Companys", b =>
                {
                    b.Navigation("projects");
                });

            modelBuilder.Entity("Entity.Model.Projects", b =>
                {
                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
